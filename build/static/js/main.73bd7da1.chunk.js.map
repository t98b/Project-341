{"version":3,"sources":["components/shared/Icon.js","firebase.js","components/Login/Login.js","components/LeftSection/UserInfoSection.js","components/shared/LeftMenuHeaderButton.js","components/shared/toggle.js","components/shared/BasicButton.js","components/shared/FloatingLabelTextField.js","components/LeftSection/ChannelSection.js","components/LeftSection/PersonalChatSection.js","components/LeftSection/LeftSection.js","components/RightSection/InputField/InputField.js","components/RightSection/Header/BoardHeader.js","components/RightSection/Board/MessageBoard.js","components/RightSection/RightSection.js","components/Main.js","serviceWorker.js","index.js","App.js"],"names":["library","add","faEyeSlash","faEye","faPlusSquare","faTimes","faCheck","faChevronDown","faPaperclip","farStar","fasStar","faUser","faPen","EyeSlashIcon","icon","EyeIcon","CheckIcon","size","ChevronDownIcon","PaperclipIcon","RegularStarIcon","UserIcon","PenIcon","firebase","initializeApp","auth","Login","useState","signUp","setSignUp","className","goBackTo","showSignUp","Slackish","LoginForm","props","hidePassword","setHidePassword","placeholder","type","hidePasswordToggle","label","data-width","data-size","data-button-type","data-auto-logout-link","data-use-continue-as","SignUpForm","TextField","PasswordField","onClick","LoginButton","CancelButton","SignUpButton","UserInfoSection","StatusIndicator","ChannelName","LeftMenuHeaderButton","Toggle","toggleHeader","toggleDesc","selected","onToggle","BasicButton","disabled","FloatingLabelTextField","inputLength","setInputLength","showError","setShowError","errorMessage","setErrorMessage","shouldDisplayErrorMessage","event","target","value","length","maxLength","error","errorToDisplay","errorNameTooLong","errorEmptyField","onChange","strLength","header","optional","beforeIcon","undefined","underField","ChannelSection","name","setName","desc","setDesc","showOverlay","setShowOverlay","privateChannel","setPrivateChannel","setDisabled","close","channels","closeOverlay","onNameChange","onDescChange","onSubmit","currentDate","Date","firestore","collection","messages","description","date","Channel","Channels","map","channel","key","id","PopUpAddChannel","displayToggleDesc","placehoder","PersonalChatSection","LeftSection","InputField","message","setMessage","sendTo","path","context","console","log","preventDefault","newMessage","user","timestamp","doc","update","FieldValue","arrayUnion","BoardHeader","data","data-tip","users","place","effect","delayShow","AddTopicField","MessageBoard","MessageSection","firstMessage","lastUser","lastTime","time","isLongDelay","lastMessageTime","now","moment","end","duration","diff","asHours","Fragment","LastMessageUser","text","setNewValue","UserAvatar","getFirstUserInitial","charAt","ChatUserName","formatTime","MessageHeader","format","SimpleMessage","FirstMessage","unix","seconds","isDisabled","ForeWordButton","TimeSeperator","dayString","RightSection","MessageBoardSection","SearchSection","Main","setChannels","setTargetName","boardData","setBoardData","setSendTo","loading","setLoading","useEffect","channelsAr","onSnapshot","snap","forEach","push","getChannelData","menu","innerText","Boolean","window","location","hostname","match","ReactDOM","render","Notification","requestPermission","then","permission","get","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73bd7da1.chunk.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library }  from '@fortawesome/fontawesome-svg-core';\nimport { faEyeSlash, faEye , faPlusSquare, faUser} from '@fortawesome/free-regular-svg-icons';\nimport { faTimes, faCheck, faChevronDown, faPaperclip, faPen } from '@fortawesome/free-solid-svg-icons';\nimport { faStar as farStar} from '@fortawesome/free-regular-svg-icons';\nimport { faStar as fasStar} from '@fortawesome/free-solid-svg-icons';\n\n\nlibrary.add(\n    faEyeSlash, \n    faEye, \n    faPlusSquare, \n    faTimes, \n    faCheck, \n    faChevronDown, \n    faPaperclip, \n    farStar, \n    fasStar, \n    faUser,\n    faPen\n);\n\nexport const EyeSlashIcon = () => <FontAwesomeIcon icon={faEyeSlash}/>;\n\nexport const EyeIcon = () => <FontAwesomeIcon icon={faEye}/>;\n\nexport const PlusSignIcon = () => <FontAwesomeIcon icon={faPlusSquare} size='lg'/>\n\nexport const TimesIcon = () => <FontAwesomeIcon icon={faTimes} size='lg'/>\n\nexport const CheckIcon = () => <FontAwesomeIcon icon={faCheck} size='xs'/>\n\nexport const ChevronDownIcon = () => <FontAwesomeIcon icon={faChevronDown} size='xs'/>\n\nexport const PaperclipIcon = () => <FontAwesomeIcon icon={faPaperclip} size='sm'/>\n\nexport const RegularStarIcon = () => <FontAwesomeIcon icon={farStar} size='xs'/>\n\nexport const SolidStarIcon = () => <FontAwesomeIcon icon={fasStar} size='xs'/>\n\nexport const UserIcon = () => <FontAwesomeIcon icon={faUser} size='xs'/>\n\nexport const PenIcon = () => <FontAwesomeIcon icon={faPen} size='xs'/>\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\nimport 'firebase/storage';\nimport \"firebase/analytics\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n    \"apiKey\": \"AIzaSyBkMtloCvcSKjYLuv8mcUyRVj0-0Hd3vFs\",\n    \"authDomain\": \"slackish-5461d.firebaseapp.com\",\n    \"databaseURL\": \"https://slackish-5461d.firebaseio.com\",\n    \"projectId\": \"slackish-5461d\",\n    \"storageBucket\": \"gs://slackish-5461d.appspot.com\",\n    \"messagingSenderId\": \"843184095995\",\n    \"appId\": \"1:843184095995:web:ac0b8bb063955798a0265e\",\n    \"measurementId\": \"G-X9KDBC637T\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n  export const auth = firebase.auth();\n  export default firebase ;","import React, {useState} from 'react';\nimport './Login.css';\nimport { EyeIcon, EyeSlashIcon } from './../shared/Icon.js';\nimport firebase from './../../firebase.js'\n\nexport const Login = () => {\n\n    const [signUp, setSignUp] = useState(false);\n    const [fieldsEmpty, setFieldsEmpty] = useState(true);\n\n    const showSignUp = () => {\n        return setSignUp(true)\n    };\n\n    const showLoginIn = () => {\n        return setSignUp(false)\n    };\n\n    return (\n        <div className=\"login\">\n            <Slackish></Slackish> \n            {signUp ? <SignUpForm goBackTo={showLoginIn}></SignUpForm> : <LoginForm showSignUp={showSignUp}></LoginForm>}\n        </div>\n    );\n};\n\nconst Slackish = () => {\n    return (\n        <div className=\"text__container\">\n            <span className='login__title'> #SLACKISH </span>\n        </div>\n    );\n};\n\nconst LoginForm = (props) => {\n    const [hidePassword, setHidePassword] = useState('password');\n\n    const hidePasswordToggle = () => {\n        return hidePassword === 'text' ? setHidePassword('password') : setHidePassword('text');\n    }\n\n    return (  \n        <div>\n            <TextField placeholder={'Username/Email'}></TextField>\n            <PasswordField \n            type={hidePassword} \n            placeholder={'Password'}\n            hidePasswordToggle={hidePasswordToggle}\n            hidePassword={hidePassword}\n            ></PasswordField>\n            <LoginButton label={'Sign In'}></LoginButton>\n            <SignUpButton showSignUp={props.showSignUp}></SignUpButton>\n            {/* Facebook Button */}\n            <div className=\"fb-login-button\" \n            data-width=\"180\" \n            data-size=\"large\" \n            data-button-type=\"continue_with\" \n            data-auto-logout-link=\"false\" \n            data-use-continue-as=\"false\"></div>\n        </div>\n    );\n};\n\nconst SignUpForm = (props) => {\n\n    const [hidePassword, setHidePassword] = useState('password');\n    const [email, setEmail] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n\n    const hidePasswordToggle = () => {\n        return hidePassword === 'text' ? setHidePassword('password') : setHidePassword('text');\n    }\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        const {email, username, password} = this.state;\n        firebase.auth().createUserWithEmailAndPassword(email, password).then(() => {\n            const user = firebase.auth().currentUser;\n            user.updateProfile({displayName: username}).then(() => {\n                this.props.history.push('/');\n            })\n            .catch(error => {\n                this.setState({error});\n            });\n        }).catch(error => {\n            this.setState({error});\n        });\n    }\n\n    return (  \n        <div className=\"container__signUp\">\n            <TextField placeholder={'Username'}></TextField>\n            <TextField placeholder={'Email'}></TextField>\n            <PasswordField className=\"login__field--signUp\" \n            type={hidePassword} \n            placeholder={'Password'}\n            hidePasswordToggle={hidePasswordToggle}\n            hidePassword={hidePassword}\n            ></PasswordField>\n            <PasswordField className=\"login__field--signUp\" \n            type={hidePassword} \n            placeholder={'Confirm password'}\n            hidePasswordToggle={hidePasswordToggle}\n            hidePassword={hidePassword}\n            ></PasswordField>\n            <LoginButton label={'Sign me up!'}></LoginButton>\n            <CancelButton goBackTo={props.goBackTo}></CancelButton>\n        </div>\n    );\n};\n\nconst TextField = (props) => {\n    return (\n        <div className=\"container__textField\">\n            <input\n            type={props.type}\n            className='login__field'\n            placeholder={props.placeholder}>\n            </input>\n        </div>\n    );\n};\n\nconst PasswordField = (props) => {\n    return (\n        <div className=\"container__textField\">\n            <input\n            type={props.type}\n            className='login__field'\n            placeholder={props.placeholder}>\n            </input>\n            <span className=\"login__icon\" onClick={props.hidePasswordToggle}> {props.hidePassword === 'text' ? <EyeIcon /> : <EyeSlashIcon />} </span>\n        </div>\n    );\n};\n\nconst LoginButton = (props) => {\n    return (\n        <button className=\"login__button login__button--email\">\n            {props.label}\n        </button>\n    );\n}\n\nconst CancelButton = (props) => {\n    return (\n        <div>\n            <button className=\"login__button login__button--cancel\" onClick={props.goBackTo}>\n                Cancel\n            </button>\n        </div>\n    );\n}\n\nconst SignUpButton = (props) => {\n    return(\n        <p>\n            Don't have an account? <span className=\"link\" onClick={props.showSignUp}>Create one now!</span>\n        </p>\n    );\n};","import React, { useState } from 'react';\nimport './../Main.css';\nimport './../../App.css';\nimport { ChevronDownIcon } from '../shared/Icon';\n\nexport const UserInfoSection = () => {\n    return(\n        <div className=\"main__layout--userInfo\">\n            <ChannelName />\n            <div><StatusIndicator/></div>\n        </div>\n    );\n};\n\nconst StatusIndicator = (props) => {\n\n    return (\n        <div className=\"status-indicator\">\n            <span className=\"status-username\">Alex</span>\n        </div>\n    );\n}\n\nconst ChannelName = () => {\n    return (\n        <div>\n            <span className=\"status-header\">Project341</span> <div className=\"chevron\"><ChevronDownIcon /></div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport './../../App.css';\n\nexport const LeftMenuHeaderButton = (props) => {\n    return (\n        <div className=\"longButton__header\">\n            <span className=\"label__header label__header--title channel-header\">{props.label}</span> \n            <span className=\"label__header--icon\" onClick={props.onClick}></span>\n        </div>\n    );\n};","import React, {useState} from 'react';\nimport { CheckIcon } from './Icon';\nimport './../Main.css';\n\nexport const Toggle = (props) => {\n    return(\n        <div className='container__desc'>\n            <div className='toggleDesc__container'>\n                <div><span className='floatingField__header'>{props.toggleHeader}</span></div>\n                <span className='toggle__text'> {props.toggleDesc}</span>\n            </div>\n            <div className='container__switch'>\n                <div className={ props.selected ? 'toggle__container--selected ' : 'toggle__container' } onClick={props.onToggle}>\n                    <div className='toggle__check'> {props.selected ? <CheckIcon /> : ''} </div>\n                    <div className={ props.selected ? ' toggle__childSwitch toggle__childSwitch--selected toggle__container--selected ' : 'toggle__childSwitch' }></div>\n                </div>\n            </div>\n        </div>\n    );\n};","import React from 'react';\n\nexport const BasicButton = (props) => {\n    return(\n        <button \n        className={ props.disabled ? 'basicButton basicButton--disabled' : 'basicButton basicButton--enabled'} \n        onClick={props.onClick}>\n            {props.label}\n        </button>\n    );\n};","import React, {useState} from 'react';\nimport './../Main.css';\n\nexport const FloatingLabelTextField = (props) => {\n    const [inputLength, setInputLength] = useState(0);\n    const [showError, setShowError] = useState(false);\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const remainingChar = (event) => {\n        const strLength = event.target.value.length;\n        setInputLength(strLength);\n        shouldDisplayErrorMessage(event);\n    }; \n\n    const shouldDisplayErrorMessage = (event) => {\n        if ((event.target.value.length < 1) || (event.target.value.length > props.maxLength)) {\n            const error = errorToDisplay(event);\n            setErrorMessage(error);\n            return setShowError(true);\n        }\n        return setShowError(false);\n    }\n\n    const displayCharCount = () => {\n        return props.maxLength !== undefined\n    }\n\n    const errorToDisplay = (event) => {\n        return event.target.value.length > props.maxLength ? props.errorNameTooLong : props.errorEmptyField;\n    }\n\n    return(\n        <div className='container__floatingField' onChange={remainingChar}>\n            <div className='floatingField_container--header'>\n                <span className='floatingField__header'>{props.header}</span>\n                { props.optional ? <span className='floatingField__optional'>(optional)</span> : null} \n                { showError === true ? <span className='floatingField__desc'> {errorMessage} </span> : null}\n            </div>\n            <div className={showError ? 'floatingField_container--error' : 'floatingField_container'}>\n                <span className='floatingField__icon'> {props.beforeIcon} </span>\n                <input \n                type='text'\n                className='floatingField__input'\n                placeholder={props.placeholder}\n                onChange={props.onChange}\n                > \n                </input>\n                { displayCharCount() ? <span \n                className={inputLength > props.maxLength ? 'floatingField__length floatingField__length--error' : 'floatingField__length floatingField__length--ok'}> \n                    {props.maxLength - inputLength}\n                </span> : null }\n            </div>\n            <span className='floatingField__underField'> { props.underField } </span>\n        </div>\n    );\n};","import React, { useState } from 'react';\nimport './../../App.css';\nimport { LeftMenuHeaderButton } from './../shared/LeftMenuHeaderButton';\nimport { Toggle } from './../shared/toggle';\nimport { BasicButton }  from './../shared/BasicButton';\nimport { FloatingLabelTextField } from './../shared/FloatingLabelTextField';\nimport firebase from 'firebase';\n\n\nexport const ChannelSection = (props) => {\n\n    const [name, setName] = useState('');\n    const [desc, setDesc] = useState(null);\n    const [showOverlay, setShowOverlay] = useState(false);\n    const [privateChannel, setPrivateChannel] = useState(false);\n    const [disabled, setDisabled] = useState(true);\n    const [selected, setSelected] = useState(false);\n\n    const click = () => {\n        setShowOverlay(true);\n    };\n\n    const toggle = () => {\n        const opposite = !privateChannel;\n        setPrivateChannel(opposite)\n    }\n\n    const close = () => {\n        setShowOverlay(false);\n        setPrivateChannel(false)\n    };\n\n    const onChannelNameChange= (event) => {\n        setName(event.target.value);\n        if(event.target.value.length > 0) {\n            setDisabled(false);\n        }\n    };\n\n    const onChannelDescChange= (event) => {\n        setDesc(event.target.value);\n        if(event.target.value.length > 0) {\n            setDisabled(false);\n        }\n    };\n\n    const onSubmit = () => {\n        const currentDate = new Date();\n        firebase.firestore().collection('channels').add({\n            name: name,\n            privateChannel: privateChannel,\n            messages: [],\n            description: desc,\n            date: currentDate\n        });\n        close(); //close pop-up after adding channel\n    };\n\n    return(\n        <div className=\"main__layout--channels\">\n            <LeftMenuHeaderButton\n            label={'Channels'} \n            onClick={click}\n            />\n            <Channels \n            channels={props.channels} \n            onClick={props.onClick}\n            />\n           { showOverlay ? <PopUpAddChannel \n           disabled={disabled}\n           closeOverlay={close} \n           selected={privateChannel}\n           onNameChange={onChannelNameChange} \n           onDescChange={onChannelDescChange} \n           onSubmit={onSubmit}\n           onToggle={toggle}\n           /> : null }\n        </div>\n    );\n};\n\nconst Channel = (props) => {\n    return (\n        <div className=\"section__channel container_channel\">\n            <span className=\"section__channel--hashtag\">#</span> <span onClick={props.onClick}>{props.name}</span>\n        </div>\n    );\n}\n\n\nconst Channels = (props) => {\n    const channels = props.channels;\n    return (\n        <div className=\"section__channels\">\n            { channels.map((channel) => \n                <Channel key={channel.id} name={channel.name} onClick={props.onClick}/>\n            )}\n        </div>\n    );\n}\n\nconst PopUpAddChannel = (props) => {\n    const emptyFieldMessage = 'Don’t forget to name your channel.';\n    const nameTooLongMessage = 'Channel names can’t be longer than 80 characters.';\n    const channelDescription = 'Channels are where your members communicate. They\\'re best when organized around a topic - #proj-budget, for example.'\n    const toggleDefaultDesc = 'When a channel is set to private, it can only be viewed or joined by invitation.';\n    const toggleSelectedDesc = 'This can’t be undone. A private channel cannot be made public later on.';\n    const underField = 'What’s this channel about?';\n\n    const displayToggleDesc = props.selected ? toggleSelectedDesc : toggleDefaultDesc;\n\n    return(\n        <div className=\"section__overlay\" >\n            <div className=\"popUp\">\n                <div className=\"popUp__top\">\n                    <span className=\"popUp__header\">{props.selected ? 'Create a private channel': 'Create a channel'}</span> \n                    <div className='closeButton__container'>\n                        <span className='popUp__closeButton' onClick={props.closeOverlay}></span>\n                    </div>\n                </div>\n                <div className=\"popUp__body\">\n                    <div>\n                        <span className='popUp_briefDesc'> {channelDescription} </span>\n                    </div>\n                    <FloatingLabelTextField \n                    header={'Name'} \n                    errorEmptyField={emptyFieldMessage} \n                    errorNameTooLong={nameTooLongMessage}\n                    beforeIcon={'#'} \n                    placehoder={'e.g. plan-budget'} \n                    onChange={props.onNameChange} \n                    maxLength={80}\n                    />\n                    <FloatingLabelTextField \n                    header={'Description'} \n                    optional={true} \n                    onChange={props.onDescChange} \n                    beforeIcon={'#'}\n                    underField={underField}\n                    />\n\n                    <Toggle \n                    toggleHeader='Make private'\n                    toggleDesc={displayToggleDesc}\n                    onToggle={props.onToggle} \n                    selected={props.selected} \n                    />\n                </div>\n                <div className=\"popUp__bottom\">\n                    <div className='popUp__button'>\n                        <BasicButton disabled={props.disabled} label={'Create'} onClick={props.onSubmit}/>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}","import React from 'react';\nimport './../../App.css';\nimport { LeftMenuHeaderButton } from './../shared/LeftMenuHeaderButton';\n\nexport const PersonalChatSection = () => {\n    return(\n        <div className=\"main__layout--chat\">\n            {/* ADD YOU CODE IN THIS SECTION */}\n            <LeftMenuHeaderButton\n            label={'Direct Messages'} \n            />\n        </div>\n    );\n};\n\nconst DirectMessage = (props) => {\n    return (\n        <div className=\"section__channel container_channel\">\n            <span onClick={props.onClick}>{props.name}</span>\n        </div>\n    );\n}\n\nconst DirectMessages = (props) => {\n    const chats = props.chats;\n    return (\n        <div className=\"section__channels\">\n            { chats.map((chat) => \n                <DirectMessage key={chat.id} name={chat.name} onClick={props.onClick} />\n            )}\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport { UserInfoSection } from './UserInfoSection';\nimport { ChannelSection } from './ChannelSection';\nimport { PersonalChatSection } from './PersonalChatSection';\nimport { tsPropertySignature } from '@babel/types';\n\n\nexport const LeftSection = (props) => {\n    return(\n        <div className=\"main__layout--leftPannel\">\n            <UserInfoSection />\n            <ChannelSection channels={props.channels} onClick={props.onClick}/>\n            <PersonalChatSection />\n        </div>\n    );\n};","import React, { useState } from 'react';\nimport { PaperclipIcon } from './../../shared/Icon'\nimport './../../Main.css';\nimport './../../../App.css';\nimport firebase from 'firebase';\n\nexport const InputField = (props) => {\n    const [message, setMessage] = useState('');\n    const path = props.path;\n    const context = props.context;\n    const sendTo = props.sendTo;\n    console.log(sendTo);\n\n    const onChange = (event) => {\n        setMessage(event.target.value);\n    }\n\n    const isDirectMessage = () => {\n        return \n    }\n\n    const sendMessage = (event) => {\t\n        event.preventDefault();\t\t\n        if (message !== '') {\n            const newMessage = {\n                message: message,\n                user: props.user,\n                timestamp: new Date()\n            }\n            let messagesRef = firebase.firestore().collection('channels').doc(sendTo);\n            messagesRef.update({\n                messages: firebase.firestore.FieldValue.arrayUnion(newMessage)\n            });\n        }\n        setMessage('');\n    }\n\n    return(\n        <form className=\"input-field-container\" onSubmit={sendMessage}>\n            <span className=\"input-field-container--icon\"><PaperclipIcon /></span>\n            <input className=\"input-field-container--inputField\" value={message} onChange={onChange} placeholder={'Message '} />\n        </form>\n    );\n};","import React, { useState } from 'react';\nimport './../../Main.css';\nimport './../../../App.css';\nimport { RegularStarIcon, UserIcon, PenIcon } from './../../shared/Icon';\nimport ReactTooltip from 'react-tooltip'\n\nexport const BoardHeader = (props) => {\n    const data = props.data;\n    return(\n        <div className=\"board-header\">\n            {data &&             \n                <div className=\"board-header__title-section\">\n                    <span className=\"board-header__title-name\">#{data.name}</span>\n                    <span className=\"board-header__title-icons\">\n                        <span data-tip=\"Star this channel\" className=\"board-icon board-icon--star\"> \n                            <RegularStarIcon />\n                        </span> \n                        <span className=\"board-seperator\">|</span>\n                        <span className=\"board-icon board-icon--user\"> \n                            <UserIcon /> {props.users}\n                        </span> \n                        <span className=\"board-seperator\">|</span> \n                        <span className=\"board-icon board-icon--star\"> \n                            <RegularStarIcon />\n                        </span> \n                        <span className=\"board-seperator\">|</span> \n                        <AddTopicField />\n                    </span>\n                </div>\n            }\n            <div className=\"board-header__search-section\">\n            </div>\n            <ReactTooltip className=\"tool-tip\" place=\"bottom\" type=\"dark\" effect=\"solid\" delayShow={200}/>\n        </div>\n    );\n};\n\nconst AddTopicField = () => {\n    return (\n        <div className=\"container-inlineFlex\">\n            <div className=\"container-add-topic\">\n                <div className=\"add-field-container\">\n                    <span className=\"pen-icon\"><PenIcon /></span> Add a topic\n                </div>\n                <div className=\"header-button__edit clickable\">Edit</div>\n            </div>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport './../../../App.css';\nimport './../../Main.css';\nimport moment from 'moment';\nimport { UserIcon, PenIcon } from './../../shared/Icon';\n\nexport const MessageBoard = (props) => {\n    const data = props.data;\n    const messages = data !== undefined ? data.messages : null;\n\n    return(\n        <MessageSection messages={messages} data={data}/>\n    );\n};\n\nconst MessageSection = (props) => {\n    const messages = props.messages;\n    const data = props.data;\n    const firstMessage = props.messages && props.messages.length > 0 ? props.messages[0] : null;\n\n    let lastUser = '';\n    let lastTime = firstMessage ? firstMessage.time : new Date();\n\n    const isDifferentUser = (LastMessageUser) => { \n        if(lastUser !== LastMessageUser) {\n            return true;\n        }\n        return false;\n    }\n\n    const isLongDelay = (lastMessageTime) => {\n        const now = moment(lastTime);\n        const end = moment(lastMessageTime);\n\n        const duration = moment.duration(now.diff(end)).asHours();\n\n        if (props.messages[0].time === lastMessageTime) {\n            return true;\n        }\n        //Decided for 2hours for particular reason\n        if (duration > 2) {\n            return true;\n        }\n        return false;\n    }\n\n    const setNewValue = (message) => {\n        lastTime = message.time;\n        lastUser = message.user;\n    }\n    \n    return(\n        <React.Fragment>\n            <FirstMessage \n            data={data}\n            />\n            {messages && messages.map(message => \n                <li key={message.id}>\n                    {isLongDelay(message.time) ? <TimeSeperator time={message.time} /> : null}\n                    {isDifferentUser(message.user) || isLongDelay(message.time) ? \n                        <MessageHeader \n                        date={message.time} \n                        user={message.user} \n                        message={message.message}\n                        /> : \n                        <SimpleMessage time={message.time} message={message.text} />\n                    }\n                    {setNewValue(message)}\n                </li>\n            )}\n        </React.Fragment>\n    );\n};\n\nconst  UserAvatar = (props) => {\n    const getFirstUserInitial = props.user.charAt(0);\n    return (\n        <div className=\"user-message-avatar\">\n            <span className=\"user-message-initial\">{getFirstUserInitial}</span>\n        </div>\n    );\n}\n\nconst ChatUserName = (props) => {\n    return(\n        <div className=\"\">\n            <span className=\"user-message-username\">\n                {props.user} \n                <span className=\"user-message-timestamp\">\n                {formatTime(props.time)}\n                </span>\n            </span>\n        </div>\n    );\n}\n\nconst MessageHeader = (props) => {\n    return (\n        <div className=\"message-container\">\n            <UserAvatar user={props.user}/>\n            <div className=\"message-header-container\">\n                <ChatUserName user={props.user} time={props.date}/>\n                <span className=\"user-message\">{props.message}</span>\n            </div>\n        </div>\n    );\n}\n\nconst formatTime = (time) => {\n    return moment(time).format(\"LT\")\n}\n\nconst UserMessages = (props) => {\n    return(\n        <div className=\"user-message\">\n            <SimpleMessage time={props.time} message={props.message}/>\n        </div>\n    );\n}\n\nconst SimpleMessage = (props) => {\n    return(\n        <div className=\"simple-message__container\">\n            <span className=\"simple-message__date\">{formatTime(props.time)}</span>\n            <span className=\"simple-message__text\"> {props.message} </span>\n        </div>\n    );\n}\n\n\nconst FirstMessage = (props) => {\n    const data = props.data;\n    return(\n        <div className=\"message-foreword\">\n            {data !== undefined ? \n                <React.Fragment>\n                    <span className=\"foreword-title\">{data.name}</span>\n                    <span className=\"foreword-description\">You created this channel on {moment.unix(data.date.seconds).format(\"dddd, MMMM Do\")}. This is the very beginning of the <b>{data.name}</b> channel.</span>\n                    <span className=\"foreword-buttons-container\">\n                        <ForeWordButton label={\"Set a description\"} icon={<PenIcon />}/> \n                        <ForeWordButton label={\"Add an app\"} isDisabled={true} icon={'+'}/> \n                        <ForeWordButton label={\"Add people to this channel\"} icon={<UserIcon />}/> \n                    </span>\n                </React.Fragment>\n                : null\n            }\n        </div>\n    );\n}\n\nconst ForeWordButton = (props) => {\n    return(\n        <div className={props.isDisabled ? \"foreword-buttons disabled\" : \"foreword-buttons enabled\"}>\n            <span className=\"foreword-icon\">{props.icon}</span>{props.label} \n        </div>\n    )\n}\n\nconst TimeSeperator = (props) => {\n    const dayString = moment(props.time).format(\"dddd, MMMM Do\");\n\n    return(\n        <div className=\"time-seperator-container\">\n            <div className=\"time-separator-line\">\n            </div>\n            <span className=\"time-separator-date\">\n                {`${dayString}`}\n            </span>\n            <div className=\"time-separator-line\">\n            </div>\n        </div>\n    );\n}","import React, {useState} from 'react';\nimport { InputField } from './InputField/InputField'\nimport { BoardHeader } from './Header/BoardHeader'\nimport { MessageBoard } from './Board/MessageBoard'\nimport './../../App.css';\nimport './../Main.css';\n\nexport const RightSection = (props) => {\n    return(\n        <div className=\"main__layout--rightPannel\">\n            <SearchSection data={props.data} />\n            <MessageBoardSection data={props.data} />\n            <InputField user={'test'} sendTo={props.sendTo}/>\n        </div>\n    );\n};\n\nconst MessageBoardSection = (props) => {\n    return(\n        <div className=\"main__layout--board\">\n            <MessageBoard data={props.data} />\n            {/* ADD YOU CODE IN THIS SECTION */}\n        </div>\n    );\n};\n\nconst SearchSection = (props) => {\n    return(\n        <div className=\"main__layout--search\">\n            {/* ADD YOU CODE IN THIS SECTION */}\n            <BoardHeader data={props.data} />\n        </div>\n    );\n};","import React, {useState, useEffect} from 'react';\nimport { LeftSection } from './LeftSection/LeftSection';\nimport './../App.css';\nimport { RightSection } from './RightSection/RightSection';\nimport firebase from 'firebase';\n\nexport const Main = () => {\n    const [channels, setChannels] = useState([]);\n    const [targetName, setTargetName] = useState('');\n    const [context, setContext] = useState('');\n    const [boardData, setBoardData] = useState(channels[0]);\n    const [sendTo, setSendTo] = useState(channels[0]);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        setLoading(true);\n        let channelsAr = [];\n        \n        firebase.firestore().collection(\"channels\").onSnapshot((snap) => {\n            snap.forEach(channel => {\n                channelsAr.push({\n                    ...channel.data(),\n                    id: channel.id\n                });\n            });\n\n            setChannels(channelsAr);\n            setLoading(false);\n            console.log(\"New channels set\", channels);\n        });\n\n        setSendTo(channels.id);\n    }, [channels.length]);\n\n    const clickMenu = (event) => {\n        setTargetName(event.target.innerText);\n        getChannelData(event.target.innerText);\n    };\n    \n\n    const getChannelData = (menu) => {\n        for(const channel of channels) {\n            if (channel.name === menu) {\n                setSendTo(channel.id)\n                return setBoardData(channel);\n            }\n        }\n    }\n\n     return (\n         <div className='main__layout' >\n             {!loading && \n             <React.Fragment>\n                <LeftSection channels={channels} onClick={clickMenu} />\n                <RightSection sendTo={sendTo} data={boardData} />\n             </React.Fragment>\n             }\n         </div>\n     );\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState, useEffect, useCallback} from 'react';\nimport './App.css';\nimport { Login } from './components/Login/Login';\nimport { Main } from './components/Main';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport firebase from './firebase.js'\n\nexport const App = () => {\n  const [token, setToken] = useState();\n\n\n  const getMarker = () => {\n    const snapshot = firebase.firestore().collection('users').get()\n  }\n\n  const writeUserData = (userId, name, email, imageUrl) => {\n    firebase.database().ref('users/' + userId).set({\n      username: name,\n      email: email,\n      profile_picture : imageUrl\n    });\n  }\n  \n  useEffect(() => {\n    if (typeof Notification !== 'undefined') {\n      Notification.requestPermission().then((permission) => {\n        if (permission === 'granted') {\n          console.log('Notification permission granted.');\n          // TODO(developer): Retrieve an Instance ID token for use with FCM.\n          // ...\n        } else {\n          console.log('Unable to get permission to notify.');\n        }\n      });\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {getMarker()}\n      <Router>\n        <Switch>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/\">\n            <Main />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n"],"sourceRoot":""}